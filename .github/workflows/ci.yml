name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Flutter SDK
        run: |
          git clone https://github.com/flutter/flutter.git -b stable
          echo "${{ github.workspace }}/flutter/bin" >> $GITHUB_PATH
      
      - name: Install Dependencies
        run: flutter pub get
      
      - name: Verify Formatting
        run: dart format --output=none --set-exit-if-changed .
      
      - name: Analyze
        run: flutter analyze --fatal-infos

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Flutter SDK
        run: |
          git clone https://github.com/flutter/flutter.git -b stable
          echo "${{ github.workspace }}/flutter/bin" >> $GITHUB_PATH
      
      - name: Install Dependencies
        run: flutter pub get
      
      - name: Run Tests
        run: flutter test
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: success()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          fail_ci_if_error: false

  build-and-test-package:
    name: Build and test package on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: 'stable'
      
      - name: Install Dependencies
        run: flutter pub get
      
      - name: Build Package
        run: dart compile exe bin/flutter_ddd.dart -o flutter_ddd
      
      - name: Test CLI with sample init
        shell: bash
        run: |
          mkdir -p test_project
          cd test_project
          ../flutter_ddd --version
          echo "CLI version test completed"